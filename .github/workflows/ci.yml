on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: CI

jobs:
  linux:
    name: Full Linux check with apt libxrl ${{ matrix.use_apt_libxrl }} 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        use_apt_libxrl:
          - "true"
          - "false"
        include:
          - use_apt_libxrl: "true"
            extra_flags: ""
          - use_apt_libxrl: "false"
            extra_flags: "--features vendored"
          
    steps:
      - uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install libxrl-dev
        if: matrix.use_apt_libxrl == 'true'
        run: |
          set -ex
          curl http://xmi-apt.tomschoonjans.eu/xmi.packages.key | sudo apt-key add -
          sudo add-apt-repository --yes "deb [arch=amd64] http://xmi-apt.tomschoonjans.eu/ubuntu focal stable"
          sudo apt-get --yes --force-yes update
          sudo apt-get --yes --force-yes install libxrl11-dev
          set +ex

      - run: pip install meson ninja

      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: ${{ matrix.extra_flags }}
      
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: ${{ matrix.extra_flags }}

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: ${{ matrix.extra_flags }} -- -D warnings 

  windows:
    name: Full Windows check with vendored libxrl
    runs-on: windows-latest
    steps:
      - uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - run: pip install meson ninja

      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Activate msvc dev environment
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Remove git's link.exe
        run: del "C:\Program Files\Git\usr\bin\link.EXE"

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: "--features vendored"
      
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: "--features vendored"

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: "--features vendored -- -D warnings"
